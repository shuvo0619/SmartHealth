@model SmartHealth.Model.Models.UserAuthentication

@{
    ViewBag.Title = "Registration";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("Create", "UserAuthentication", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal form-label-left", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
       
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
       
        <div class="container col-md-8 col-md-offset-2" id="registrationPage">
            <h4>Registration</h4>
            <hr />
            @*<div class="form-group">
                <div class="col-md-6">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control col-md-6", @id = "display_name", placeholder = "First Name *", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.FirstName)
                </div>

                <div class="col-md-6">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control col-md-6", @id = "display_name", placeholder = "Last Name *", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.LastName)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control col-md-6", @id = "display_name", placeholder = "Username *", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.UserName)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-12">                    
                        @Html.EditorFor(model => model.doctor.Designation, new { htmlAttributes = new { @class = "form-control col-md-6", @id = "Designation", placeholder = "Designation*", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.doctor.Designation)                    
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control col-md-6", @id = "Email_id", placeholder = "Email Id*", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.EmailId)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control col-md-6", @id = "Password", placeholder = "Password *", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.Password)
                </div>

                <div class="col-md-6">
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control col-md-6", @id = "ConfirmPassword", placeholder = "Confirm Password *", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword)
                </div>

            </div>*@

            <div class="form-group">
                <div class="col-md-6">

                            @Html.DropDownList("RoleId", null, "", new { @class = "form-control col-md-6 ddlErrorMsg", @id = "ddlusertype", @placeholder = "User Type", @type = "text", @maxlength = "40" })
                            @Html.ValidationMessageFor(model => model.userRole.RoleName)
                            @*@Html.DropDownListFor(z => z.RoleId, new SelectList(Model.userRole.RoleName, "Value", "Text", Model.RoleId), "-- Select Role --")*@
                
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-8 col-md-10">
                    <input type="submit" value="Next" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>

}

